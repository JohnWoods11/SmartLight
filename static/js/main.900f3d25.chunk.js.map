{"version":3,"sources":["components/Room.module.css","components/IntensitySlide.module.css","components/ColorSelect.module.css","components/LightSwitch.module.css","components/Light.module.css","components/IntensitySlide.js","components/ColorSelect.js","components/LightSwitch.js","components/Light.js","components/Room.js","index.js"],"names":["module","exports","IntensitySlide","props","className","styles","input","name","min","max","defaultValue","intensity","onChange","item","emitChanged","console","log","type","ColorSelect","handleChange","bind","this","value","colour","colorselect","React","Component","LightSwitch","handleClick","emitClicked","status","is_on","switch","onClick","Light","size","light","style","backgroundColor","height","width","Room","state","colours","i","slotClicked","slotChanged","sliderSlotChanged","selectionbox","renderSwitch","renderColourSelect","renderIntensitySlide","setState","target","lightContainer","renderLight","renderSelectionBox","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.900f3d25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectionbox\":\"Room_selectionbox__9QKZm\",\"lightContainer\":\"Room_lightContainer__1MYvc\",\"light\":\"Room_light__2NCC1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"IntensitySlide_input__gymQw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorselect\":\"ColorSelect_colorselect__3KFfE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"LightSwitch_switch__3kwiB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"light\":\"Light_light__1RnwO\"};","import React from \"react\";\n\nimport styles from \"./IntensitySlide.module.css\";\n\n/*\nclass IntensitySlide extends React.Component {\n  handleChange(item) {\n    if (this.props.emitChanged) {\n      this.props.emitChanged(item);\n    } else {\n      console.log(`emitChanged is null ${this.props.emitChanged}`);\n    }\n  }\n\n  render() {\n    return (\n      <input\n        type=\"range\"\n        name=\"luminosity\"\n        min=\"0\"\n        max=\"100\"\n        defaultValue={this.props.intensity}\n        onChange={()=>{this.handleChange()}}\n      />\n    );\n  }\n}*/\n\nfunction IntensitySlide(props) {\n  let handleChange = item => {\n    if (props.emitChanged) {\n      props.emitChanged(item);\n    } else {\n      console.log(`emitChanged is null ${props.emitChanged}`);\n    }\n  };\n\n  let otherfunc = item => {\n    console.log(item);\n    return item;\n  };\n\n  return (\n    <div className={styles.input}>\n      <input\n        name=\"luminosity\"\n        min=\"0\"\n        max=\"100\"\n        defaultValue={props.intensity}\n        onChange={handleChange}\n        type=\"range\"\n      />\n    </div>\n  );\n}\n\nexport default IntensitySlide;\n","import React from \"react\";\n\nimport styles from \"./ColorSelect.module.css\";\n\nclass ColorSelect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(item) {\n    if (this.props.emitChanged) {\n      this.props.emitChanged(item);\n    } else {\n      console.log(`emitChanged is null ${this.props.emitChanged}`);\n    }\n  }\n\n  render() {\n    let select = (\n      <input\n        type=\"color\"\n        value={this.props.colour}\n        className={styles.colorselect}\n        onChange={this.handleChange}\n      />\n    );\n    return select;\n  }\n}\n\nexport default ColorSelect;\n","import React from \"react\";\n\nimport styles from \"./LightSwitch.module.css\";\n\nclass LightSwitch extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    if (this.props.emitClicked) {\n      this.props.emitClicked();\n    } else {\n      console.log(`emitClicked is null ${this.props.emitClicked}`);\n    }\n  }\n\n  render() {\n    let status;\n    if (this.props.is_on) {\n      status = \"on\";\n    } else {\n      status = \"off\";\n    }\n    return (\n      <button\n        className={styles.switch}\n        onClick={() => {\n          this.handleClick();\n        }}\n        //         this.handleClick();\n        //       }}\n      >\n        {status}\n      </button>\n    );\n  }\n}\n\nexport default LightSwitch;\n","import React from \"react\";\n\nimport styles from \"./Light.module.css\";\n\nclass Light extends React.Component {\n  handleClick() {\n    if (this.props.emitClicked) {\n      this.props.emitClicked();\n    } else {\n      console.log(`emitClicked is null ${this.props.emitClicked}`);\n    }\n  }\n\n  render() {\n    const size = (this.props.intensity / 100) * 40;\n    const is_on = this.props.is_on;\n    let colour = this.props.colour;\n    if (!is_on) {\n      colour = \"white\";\n    }\n    let button = (\n      <button\n        className={styles.light}\n        style={{ backgroundColor: colour, height: size, width: size }}\n        onClick={() => {\n          this.handleClick();\n        }}\n      />\n    );\n\n    return button;\n  }\n}\n\nexport default Light;\n","import React from \"react\";\n\nimport IntensitySlide from \"./IntensitySlide\";\nimport ColorSelect from \"./ColorSelect\";\nimport LightSwitch from \"./LightSwitch\";\nimport Light from \"./Light\";\n\nimport styles from \"./Room.module.css\";\n\nclass Room extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colours: [\n        \"#f6b73c\",\n        \"#f6b73c\",\n        \"#f6b73c\",\n        \"#f6b73c\",\n        \"#f6b73c\",\n        \"#f6b73c\"\n      ],\n      is_on: [false, true, false, true, false, true],\n      intensity: [100, 100, 100, 100, 100, 100]\n    };\n  }\n\n  renderLight(i) {\n    return (\n      <div className={styles.light}>\n        <Light\n          colour={this.state.colours[i]}\n          is_on={this.state.is_on[i]}\n          intensity={this.state.intensity[i]}\n          emitClicked={() => {\n            this.slotClicked(i);\n          }}\n        />\n      </div>\n    );\n  }\n\n  renderSwitch(i) {\n    return (\n      <LightSwitch\n        is_on={this.state.is_on[i]}\n        emitClicked={() => {\n          this.slotClicked(i);\n        }}\n      />\n    );\n  }\n\n  renderColourSelect(i) {\n    return (\n      <span>\n        <ColorSelect\n          colour={this.state.colours[i]}\n          emitChanged={item => {\n            this.slotChanged(item, i);\n          }}\n        />\n      </span>\n    );\n  }\n\n  renderIntensitySlide(i) {\n    return (\n      <IntensitySlide\n        intensity={this.state.intensity[i]}\n        emitChanged={item => {\n          this.sliderSlotChanged(item, i);\n        }}\n      />\n    );\n  }\n\n  renderSelectionBox(i) {\n    return (\n      <div className={styles.selectionbox}>\n        Light {i + 1}:{this.renderSwitch(i)}\n        <br />\n        Colour:\n        {this.renderColourSelect(i)}\n        <br />\n        Intensity:\n        {this.renderIntensitySlide(i)}\n      </div>\n    );\n  }\n\n  slotClicked(i) {\n    let is_on = [...this.state.is_on];\n    is_on[i] = !is_on[i];\n    this.setState({ is_on: is_on });\n  }\n\n  slotChanged(item, i) {\n    let colours = [...this.state.colours];\n    colours[i] = item.target.value;\n    this.setState({ colours: colours });\n  }\n\n  sliderSlotChanged(item, i) {\n    let intensity = [...this.state.intensity];\n    intensity[i] = item.target.value;\n    this.setState({ intensity: intensity });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className={styles.lightContainer}>\n          {this.renderLight(0)}\n          {this.renderLight(1)}\n          {this.renderLight(2)}\n          {this.renderLight(3)}\n          {this.renderLight(4)}\n          {this.renderLight(5)}\n        </div>\n        <br />\n        <br />\n        <div>\n          {this.renderSelectionBox(0)}\n          {this.renderSelectionBox(1)}\n          {this.renderSelectionBox(2)}\n          {this.renderSelectionBox(3)}\n          {this.renderSelectionBox(4)}\n          {this.renderSelectionBox(5)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Room;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Room from \"./components/Room\";\n\n// ========================================\n\nReactDOM.render(<Room />, document.getElementById(\"root\"));\n"],"sourceRoot":""}