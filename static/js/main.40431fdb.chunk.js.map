{"version":3,"sources":["components/ThemeInput.module.css","components/Room.module.css","components/Themes.module.css","components/ColorSelect.module.css","components/LightSwitch.module.css","components/Light.module.css","components/IntensitySlide.js","components/ColorSelect.js","components/LightSwitch.js","components/Light.js","components/Themes.js","components/ThemeInput.js","components/Room.js","index.js"],"names":["module","exports","IntensitySlide","props","className","styles","input","name","min","max","defaultValue","intensity","onChange","item","emitChanged","console","log","type","ColorSelect","value","colour","colorselect","LightSwitch","status","is_on","switch","onClick","emitClicked","Light","size","light","style","backgroundColor","height","width","Themes","makeList","themes","map","theme","index","key","JSON","parse","list","ThemeInput","themeinput","inputbox","button","Room","state","colours","theme_input_name","current_theme","loaded","localStorage","getItem","new_themes","this","setState","setThemes","setDefault","setLocalStorage","default_is_on","i","slotClicked","slotChanged","sliderSlotChanged","selectionbox","renderSwitch","renderColourSelect","renderIntensitySlide","themeSlotChanged","themeSlotClicked","themeSelectSlotClicked","themeSelectSlotChanged","s","stringify","setItem","target","selected_theme","current_is_on","current_intensity","current_colours","splice","push","lightContainer","renderLight","renderSelectionBox","RenderThemeInput","renderThemes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40431fdb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeinput\":\"ThemeInput_themeinput__KJxqL\",\"inputbox\":\"ThemeInput_inputbox__1rQn-\",\"button\":\"ThemeInput_button__3Kvkh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectionbox\":\"Room_selectionbox__9QKZm\",\"lightContainer\":\"Room_lightContainer__1MYvc\",\"light\":\"Room_light__2NCC1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themes\":\"Themes_themes__32CwU\",\"list\":\"Themes_list__3MI9J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorselect\":\"ColorSelect_colorselect__3KFfE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"LightSwitch_switch__3kwiB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"light\":\"Light_light__1RnwO\"};","import React from \"react\";\n\nimport styles from \"./IntensitySlide.module.css\";\n\n/*\nclass IntensitySlide extends React.Component {\n  handleChange(item) {\n    if (this.props.emitChanged) {\n      this.props.emitChanged(item);\n    } else {\n      console.log(`emitChanged is null ${this.props.emitChanged}`);\n    }\n  }\n\n  render() {\n    return (\n      <input\n        type=\"range\"\n        name=\"luminosity\"\n        min=\"0\"\n        max=\"100\"\n        defaultValue={this.props.intensity}\n        onChange={()=>{this.handleChange()}}\n      />\n    );\n  }\n}*/\n\nfunction IntensitySlide(props) {\n  let handleChange = item => {\n    if (props.emitChanged) {\n      props.emitChanged(item);\n    } else {\n      console.log(`emitChanged is null ${props.emitChanged}`);\n    }\n  };\n\n  return (\n    <div className={styles.input}>\n      <input\n        name=\"luminosity\"\n        min=\"0\"\n        max=\"100\"\n        defaultValue={props.intensity}\n        onChange={handleChange}\n        type=\"range\"\n      />\n    </div>\n  );\n}\n\nexport default IntensitySlide;\n","import React from \"react\";\n\nimport styles from \"./ColorSelect.module.css\";\n\nfunction ColorSelect(props) {\n  let handleChange = item => {\n    if (props.emitChanged) {\n      props.emitChanged(item);\n    } else {\n      console.log(`emitChanged is null ${props.emitChanged}`);\n    }\n  };\n\n  return (\n    <input\n      type=\"color\"\n      value={props.colour}\n      className={styles.colorselect}\n      onChange={handleChange}\n    />\n  );\n}\n\nexport default ColorSelect;\n","import React from \"react\";\n\nimport styles from \"./LightSwitch.module.css\";\n\nfunction LightSwitch(props) {\n  let handleClick = item => {\n    if (props.emitClicked) {\n      props.emitClicked();\n    } else {\n      console.log(`emitClicked is null ${props.emitClicked}`);\n    }\n  };\n\n  let status;\n  if (props.is_on) {\n    status = \"on\";\n  } else {\n    status = \"off\";\n  }\n  return (\n    <button className={styles.switch} onClick={handleClick}>\n      {status}\n    </button>\n  );\n}\n\nexport default LightSwitch;\n","import React from \"react\";\n\nimport styles from \"./Light.module.css\";\n\nfunction Light(props) {\n  let handleClick = item => {\n    if (props.emitClicked) {\n      props.emitClicked();\n    } else {\n      console.log(`emitClicked is null ${props.emitClicked}`);\n    }\n  };\n\n  const size = (props.intensity / 100) * 40;\n  const is_on = props.is_on;\n  let colour = props.colour;\n  if (!is_on) {\n    colour = \"white\";\n  }\n  return (\n    <button\n      className={styles.light}\n      style={{ backgroundColor: colour, height: size, width: size }}\n      onClick={handleClick}\n    />\n  );\n}\n\nexport default Light;\n","import React from \"react\";\n\nimport styles from \"./Themes.module.css\";\n\nfunction Themes(props) {\n  let handleChange = item => {\n    if (props.emitChanged) {\n      props.emitChanged(item);\n    } else {\n      console.log(`emitChanged is null ${props.emitChanged}`);\n    }\n  };\n\n  const handleClick = item => {\n    if (props.emitClicked) {\n      props.emitClicked();\n    } else {\n      console.log(`emitClicked is null ${props.emitClicked}`);\n    }\n  };\n\n  //WHICH IS BETTER?\n\n  /*let makeList = () => {\n    let list = [];\n    props.themes.forEach(element => {\n      let theme = JSON.parse(element);\n      list.push(<option key={props.themes.legth}>{theme[0]}</option>);\n    });\n    return list;\n  };\n  let list;\n  list = (\n    <select className={styles.list} size=\"5\" onChange={handleChange}>\n      {makeList()}\n    </select>\n  );\n\n  return list;*/\n\n  const makeList = props.themes.map((\n    theme,\n    index //TODO remove index id assignment\n  ) => (\n    <option key={index} value={index}>\n      {JSON.parse(theme)[0]}\n    </option>\n  ));\n\n  let list = (\n    <div className={styles.themes}>\n      <select className={styles.list} size=\"5\" onChange={handleChange}>\n        {makeList}\n      </select>\n      <button onClick={handleClick}>Remove Theme</button>\n    </div>\n  );\n  return list;\n}\n\nexport default Themes;\n","import React from \"react\";\nimport styles from \"./ThemeInput.module.css\";\n\nfunction ThemeInput(props) {\n  let handleClick = item => {\n    if (props.emitClicked) {\n      props.emitClicked(item);\n    } else {\n      console.log(`emitClicked is null ${props.emitClicked}`);\n    }\n  };\n\n  let handleChange = item => {\n    if (props.emitChanged) {\n      props.emitChanged(item);\n    } else {\n      console.log(`emitChanged is null ${props.emitChanged}`);\n    }\n  };\n\n  return (\n    <div className={styles.themeinput}>\n      <input\n        className={styles.inputbox}\n        type=\"text\"\n        value={props.input}\n        onChange={handleChange}\n      ></input>\n      <button className={styles.button} onClick={handleClick}>\n        Add\n      </button>\n    </div>\n  );\n}\n\nexport default ThemeInput;\n","import React from \"react\";\n\nimport IntensitySlide from \"./IntensitySlide\";\nimport ColorSelect from \"./ColorSelect\";\nimport LightSwitch from \"./LightSwitch\";\nimport Light from \"./Light\";\nimport Themes from \"./Themes\";\nimport ThemeInput from \"./ThemeInput\";\nimport styles from \"./Room.module.css\";\n\nclass Room extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colours: [\n        \"#f6b73c\",\n        \"#f6b73c\",\n        \"#f6b73c\",\n        \"#f6b73c\",\n        \"#f6b73c\",\n        \"#f6b73c\"\n      ],\n      is_on: [false, false, false, false, false, false],\n      intensity: [100, 100, 100, 100, 100, 100],\n      themes: [],\n      theme_input_name: \"Off\",\n      current_theme: null\n    };\n  }\n\n  componentDidMount() {\n    let loaded = localStorage.getItem(\"state\");\n    console.log(loaded);\n    if (loaded) {\n      let new_state = JSON.parse(loaded);\n      let new_themes = new_state.themes;\n\n      this.setState({ themes: new_themes });\n    } else {\n      this.setThemes();\n      console.log(`set ${this.state.is_on}`);\n      this.setDefault();\n      this.setThemes();\n      console.log(`set ${this.state.is_on}`);\n      let default_input = [...this.state.theme_input_name];\n      default_input = \"Enter name here\";\n      this.setState({ theme_input_name: default_input });\n      this.setLocalStorage();\n      console.log(this.state.is_on);\n    }\n  }\n\n  setDefault() {\n    let default_is_on = [...this.state.is_on];\n    default_is_on = [true, true, true, true, true, true];\n    let default_name = [...this.state.theme_input_name];\n    default_name = \"Default\";\n    this.setState({ is_on: default_is_on, theme_input_name: default_name });\n    console.log(this.state.is_on);\n  }\n\n  renderLight(i) {\n    return (\n      <div className={styles.light}>\n        <Light\n          colour={this.state.colours[i]}\n          is_on={this.state.is_on[i]}\n          intensity={this.state.intensity[i]}\n          emitClicked={() => {\n            this.slotClicked(i);\n          }}\n        />\n      </div>\n    );\n  }\n\n  renderSwitch(i) {\n    return (\n      <LightSwitch\n        is_on={this.state.is_on[i]}\n        emitClicked={() => {\n          this.slotClicked(i);\n        }}\n      />\n    );\n  }\n\n  renderColourSelect(i) {\n    return (\n      <span>\n        <ColorSelect\n          colour={this.state.colours[i]}\n          emitChanged={item => {\n            this.slotChanged(item, i);\n          }}\n        />\n      </span>\n    );\n  }\n\n  renderIntensitySlide(i) {\n    return (\n      <IntensitySlide\n        intensity={this.state.intensity[i]}\n        emitChanged={item => {\n          this.sliderSlotChanged(item, i);\n        }}\n      />\n    );\n  }\n\n  renderSelectionBox(i) {\n    return (\n      <div className={styles.selectionbox}>\n        Light {i + 1}:{this.renderSwitch(i)}\n        <br />\n        Colour:\n        {this.renderColourSelect(i)}\n        <br />\n        Intensity:\n        {this.renderIntensitySlide(i)}\n      </div>\n    );\n  }\n\n  renderThemes() {\n    return (\n      <Themes\n        themes={this.state.themes}\n        emitChanged={item => {\n          this.themeSlotChanged(item);\n        }}\n        emitClicked={item => {\n          this.themeSlotClicked(item);\n        }}\n      />\n    );\n  }\n\n  RenderThemeInput() {\n    return (\n      <div>\n        <ThemeInput\n          input={this.state.theme_input_name}\n          emitClicked={(item, name) => {\n            this.themeSelectSlotClicked(item, name);\n          }}\n          emitChanged={item => {\n            this.themeSelectSlotChanged(item);\n          }}\n        />\n      </div>\n    );\n  }\n\n  slotClicked(i) {\n    let is_on = [...this.state.is_on];\n    is_on[i] = !is_on[i];\n    this.setState({ is_on: is_on });\n\n    let s = JSON.stringify(this.state);\n\n    localStorage.setItem(\"state\", s);\n  }\n\n  slotChanged(item, i) {\n    let colours = [...this.state.colours];\n    colours[i] = item.target.value;\n    this.setState({ colours: colours });\n  }\n\n  sliderSlotChanged(item, i) {\n    let intensity = [...this.state.intensity];\n    intensity[i] = item.target.value;\n    this.setState({ intensity: intensity });\n  }\n\n  themeSlotChanged(item) {\n    let selected_theme = [this.state.themes[item.target.value]];\n    selected_theme = JSON.parse(selected_theme);\n    console.log(selected_theme);\n    let current_is_on = [...this.state.is_on];\n    let current_intensity = [...this.state.intensity];\n    let current_colours = [...this.state.colours];\n    current_is_on = selected_theme[1];\n    current_colours = selected_theme[2];\n    current_intensity = selected_theme[3];\n    current_colours = selected_theme[2];\n    this.setState({\n      is_on: current_is_on,\n      intensity: current_intensity,\n      colours: current_colours,\n      current_theme: item.target.value\n    });\n  }\n\n  themeSlotClicked(item) {\n    if (this.state.current_theme) {\n      let themes = [...this.state.themes];\n      themes.splice(this.state.current_theme, 1);\n      this.setState({ themes: themes });\n      console.log(this.state.current_theme);\n      this.setLocalStorage();\n    } else {\n      console.log(\n        `this.state.current_theme is null ${this.state.current_theme}`\n      );\n    }\n  }\n\n  themeSelectSlotClicked(item) {\n    this.setThemes(item);\n    this.setLocalStorage();\n  }\n\n  setThemes(item, name) {\n    let themes = [...this.state.themes];\n    let theme = [];\n    theme.push(this.state.theme_input_name);\n    theme.push(this.state.is_on);\n    theme.push(this.state.colours);\n    theme.push(this.state.intensity);\n    let s = JSON.stringify(theme);\n    themes.push(s);\n    this.setState({ themes: themes });\n  }\n\n  themeSelectSlotChanged(item) {\n    let name = item.target.value;\n    this.setState({ theme_input_name: name });\n  }\n\n  setLocalStorage() {\n    let state = JSON.stringify(this.state);\n    localStorage.setItem(\"state\", state);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className={styles.lightContainer}>\n          {this.renderLight(0)}\n          {this.renderLight(1)}\n          {this.renderLight(2)}\n          {this.renderLight(3)}\n          {this.renderLight(4)}\n          {this.renderLight(5)}\n        </div>\n        <br />\n        <br />\n        <div>\n          {this.renderSelectionBox(0)}\n          {this.renderSelectionBox(1)}\n          {this.renderSelectionBox(2)}\n          {this.renderSelectionBox(3)}\n          {this.renderSelectionBox(4)}\n          {this.renderSelectionBox(5)}\n        </div>\n        <div>\n          {this.RenderThemeInput()}\n          {this.renderThemes()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Room;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Room from \"./components/Room\";\n\n// ========================================\n\nReactDOM.render(<Room />, document.getElementById(\"root\"));\n"],"sourceRoot":""}