{"version":3,"sources":["index.js"],"names":["IntensitySlide","props","handleChange","bind","item","this","emitChanged","console","log","type","name","min","max","defaultValue","intensity","onChange","React","Component","ColourSelect","value","colour","className","LightSwitch","handleClick","emitClicked","status","is_on","onClick","Light","size","style","backgroundColor","height","width","Room","state","colours","i","slotClicked","slotChanged","sliderSlotChanged","renderSwitch","renderColourSelect","renderIntensitySlide","setState","target","renderLight","renderSelectionBox","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4defc905.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nclass IntensitySlide extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(item) {\n    if (this.props.emitChanged) {\n      this.props.emitChanged(item);\n    } else {\n      console.log(`emitChanged is null ${this.props.emitChanged}`);\n    }\n  }\n\n  render() {\n    return (\n      <input\n        type=\"range\"\n        name=\"luminosity\"\n        min=\"0\"\n        max=\"100\"\n        defaultValue={this.props.intensity}\n        onChange={this.handleChange}\n      />\n    );\n  }\n}\n\nclass ColourSelect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(item) {\n    if (this.props.emitChanged) {\n      this.props.emitChanged(item);\n    } else {\n      console.log(`emitChanged is null ${this.props.emitChanged}`);\n    }\n  }\n\n  render() {\n    let select = (\n      <input\n        type=\"color\"\n        value={this.props.colour}\n        className=\"colourselect\"\n        onChange={this.handleChange}\n      />\n    );\n    return select;\n  }\n}\n\nclass LightSwitch extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    if (this.props.emitClicked) {\n      this.props.emitClicked();\n    } else {\n      console.log(`emitClicked is null ${this.props.emitClicked}`);\n    }\n  }\n\n  render() {\n    let status;\n    if (this.props.is_on) {\n      status = \"on\";\n    } else {\n      status = \"off\";\n    }\n    return (\n      <button\n        className=\"switch\"\n        onClick={() => {\n          this.handleClick();\n        }}\n      >\n        {status}\n      </button>\n    );\n  }\n}\n\nclass Light extends React.Component {\n  handleClick() {\n    if (this.props.emitClicked) {\n      this.props.emitClicked();\n    } else {\n      console.log(`emitClicked is null ${this.props.emitClicked}`);\n    }\n  }\n\n  render() {\n    const size = (this.props.intensity / 100) * 40;\n    const is_on = this.props.is_on;\n    let colour = this.props.colour;\n    if (!is_on) {\n      colour = \"white\";\n    }\n    let button = (\n      <button\n        className=\"light\"\n        style={{ backgroundColor: colour, height: size, width: size }}\n        onClick={() => {\n          this.handleClick();\n        }}\n      />\n    );\n\n    return button;\n  }\n}\n\nclass Room extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colours: [\n        \"#f6b73c\",\n        \"#f6b73c\",\n        \"#f6b73c\",\n        \"#f6b73c\",\n        \"#f6b73c\",\n        \"#f6b73c\"\n      ],\n      is_on: [false, true, false, true, false, true],\n      intensity: [100, 100, 100, 100, 100, 100]\n    };\n  }\n\n  renderLight(i) {\n    return (\n      <span className=\"lightspan\">\n        <Light\n          colour={this.state.colours[i]}\n          is_on={this.state.is_on[i]}\n          intensity={this.state.intensity[i]}\n          emitClicked={() => {\n            this.slotClicked(i);\n          }}\n        />\n      </span>\n    );\n  }\n\n  renderSwitch(i) {\n    return (\n      <LightSwitch\n        is_on={this.state.is_on[i]}\n        emitClicked={() => {\n          this.slotClicked(i);\n        }}\n      />\n    );\n  }\n\n  renderColourSelect(i) {\n    return (\n      <span>\n        <ColourSelect\n          colour={this.state.colours[i]}\n          emitChanged={item => {\n            this.slotChanged(item, i);\n          }}\n        />\n      </span>\n    );\n  }\n\n  renderIntensitySlide(i) {\n    return (\n      <IntensitySlide\n        intensity={this.state.intensity[i]}\n        emitChanged={item => {\n          this.sliderSlotChanged(item, i);\n        }}\n      />\n    );\n  }\n\n  renderSelectionBox(i) {\n    return (\n      <div className=\"selectionbox\">\n        Light {i + 1}:{this.renderSwitch(i)}\n        <br />\n        Colour:\n        {this.renderColourSelect(i)}\n        <br />\n        Intensity:\n        {this.renderIntensitySlide(i)}\n      </div>\n    );\n  }\n\n  slotClicked(i) {\n    let is_on = [...this.state.is_on];\n    is_on[i] = !is_on[i];\n    this.setState({ is_on: is_on });\n  }\n\n  slotChanged(item, i) {\n    let colours = [...this.state.colours];\n    colours[i] = item.target.value;\n    this.setState({ colours: colours });\n  }\n\n  sliderSlotChanged(item, i) {\n    let intensity = [...this.state.intensity];\n    intensity[i] = item.target.value;\n    this.setState({ intensity: intensity });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          {this.renderLight(0)}\n          {this.renderLight(1)}\n          {this.renderLight(2)}\n          {this.renderLight(3)}\n          {this.renderLight(4)}\n          {this.renderLight(5)}\n        </div>\n        <br />\n        <br />\n        <div>\n          {this.renderSelectionBox(0)}\n          {this.renderSelectionBox(1)}\n          {this.renderSelectionBox(2)}\n          {this.renderSelectionBox(3)}\n          {this.renderSelectionBox(4)}\n          {this.renderSelectionBox(5)}\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(<Room />, document.getElementById(\"root\"));\n"],"sourceRoot":""}